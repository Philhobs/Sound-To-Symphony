import collections
#import datetime
#import fluidsynth
import numpy as np
import os
import pandas as pd
import tensorflow as tf
from tensorflow.keras import layers, Sequential
import pretty_midi



class RNN_Model(object):

    def __init__(self, learning_rate=0.005, seq_length=25 ):

        ##
        seed = 42
        tf.random.set_seed(seed)
        np.random.seed(seed)

        # Sampling rate for audio playback
        self._SAMPLING_RATE = 16000
        self.learning_rate = learning_rate
        self.key_order = ['pitch', 'step', 'duration']
        self.seq_length = seq_length

        self.raw_notes = []

        inputs = tf.keras.Input((self.seq_length, 3))
        x = tf.keras.layers.LSTM(128)(inputs)

        outputs = {
        'pitch': tf.keras.layers.Dense(128, name='pitch')(x),
        'step': tf.keras.layers.Dense(1, name='step')(x),
        'duration': tf.keras.layers.Dense(1, name='duration')(x),
        }

        self.model = tf.keras.Model(inputs, outputs)


    def compile_model(self):

        def mse_with_positive_pressure(y_true: tf.Tensor, y_pred: tf.Tensor):
            mse = (y_true - y_pred) ** 2
            positive_pressure = 10 * tf.maximum(-y_pred, 0.0)
            return tf.reduce_mean(mse + positive_pressure)

        loss = {
            'pitch': tf.keras.losses.SparseCategoricalCrossentropy(
                from_logits=True),
            'step': mse_with_positive_pressure,
            'duration': mse_with_positive_pressure,
        }

        optimizer = tf.keras.optimizers.legacy.Adam(learning_rate=self.learning_rate)

        self.model.compile(
            loss=loss,
            loss_weights={
                'pitch': 0.05,
                'step': 1.0,
                'duration':1.0,
            },
            optimizer=optimizer,
        )

    def fit_data(self, train_ds, epochs = 50):

        callbacks = [
            tf.keras.callbacks.ModelCheckpoint(
                filepath='./training_checkpoints/ckpt_{epoch}',
                save_weights_only=True),
            tf.keras.callbacks.EarlyStopping(
                monitor='loss',
                patience=5,
                verbose=1,
                restore_best_weights=True),
        ]

        history = self.model.fit(
            train_ds,
            epochs=epochs,
            callbacks=callbacks,
        )

        return history

    def evaluate(self, train_ds):

        return self.evaluate(train_ds, return_dict=True)

    def process_data(self, filenames,
                    num_files = 5,
                    vocab_size = 128,
                    ):

        all_notes = []

        for f in filenames[:num_files]:
            full_path = os.path.join(path, f)  # Prepend the directory path to the filename
            notes = self._midi_to_notes(full_path)  # Pass the full path to the method
            all_notes.append(notes)

        all_notes = pd.concat(all_notes)

        n_notes = len(all_notes)

        train_notes = np.stack([all_notes[key] for key in self.key_order], axis=1)
        notes_ds = tf.data.Dataset.from_tensor_slices(train_notes)
        notes_ds.element_spec

        batch_size = 64
        buffer_size = n_notes - self.seq_length  # the number of items in the dataset\
        seq_ds = self._create_sequences(notes_ds, self.seq_length, vocab_size)
        seq_ds.element_spec

        train_ds = (seq_ds
                    .shuffle(buffer_size)
                    .batch(batch_size, drop_remainder=True)
                    .cache()
                    .prefetch(tf.data.experimental.AUTOTUNE))

        print(' --- Training Data Ready --- ')
        return train_ds


    def _midi_to_notes(self, midi_file: str) -> pd.DataFrame:
        pm = pretty_midi.PrettyMIDI(midi_file)
        instrument = pm.instruments[0]
        notes = collections.defaultdict(list)

        # Sort the notes by start time
        sorted_notes = sorted(instrument.notes, key=lambda note: note.start)
        prev_start = sorted_notes[0].start

        for note in sorted_notes:
            start = note.start
            end = note.end
            notes['pitch'].append(note.pitch)
            notes['start'].append(start)
            notes['end'].append(end)
            notes['step'].append(start - prev_start)
            notes['duration'].append(end - start)
            prev_start = start

        return pd.DataFrame({name: np.array(value) for name, value in notes.items()})

    def _notes_to_midi(self,
        notes: pd.DataFrame,
        out_file: str,
        instrument_name: str,
        velocity: int = 100,  # note loudness
        ) -> pretty_midi.PrettyMIDI:

        pm = pretty_midi.PrettyMIDI()
        instrument = pretty_midi.Instrument(
            program=pretty_midi.instrument_name_to_program(
                instrument_name))

        prev_start = 0
        for i, note in notes.iterrows():
            #ADDED THE TWO LINES BELLOW
            pitch = max(0, min(127, int(note['pitch'])))
            velocity = max(0, min(127, velocity))

            start = float(prev_start + note['step'])
            end = float(start + note['duration'])
            note = pretty_midi.Note(
                velocity=velocity,
                pitch=int(note['pitch']),
                start=start,
                end=end,
            )
            instrument.notes.append(note)
            prev_start = start

        pm.instruments.append(instrument)
        pm.write(out_file)
        return pm

    def _adjust_pitch_to_scale(self, pitch, key ='C_phrygian_minor'):

        select_key = None
        C_major = set([24,26,28,29,31,33,35,36,38,40,41,43,45,47,48,50,52,53,
                   55,57,59,60,62,64,65,67,69,71,72,74,76,77,79,81,83,84,
                   86,88,89,91,93,95,96,98,100,101,103,105,107,108,110,
                   112,113,115,117,119,120])
        C_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46,
                       48, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70,
                       72, 74, 75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 92, 94,
                       96, 98, 99, 101, 103, 104, 106, 108, 110, 111, 113, 115,
                       116, 118])
        D_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49,
                       50, 52, 54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73,
                       74, 76, 78, 79, 81, 83, 85, 86, 88, 90, 91, 93, 95, 97,
                       98, 100, 102, 103, 105, 107, 109, 110, 112, 114, 115, 117,
                       119, 121, 122, 124, 126, 127])
        D_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48,
                       50, 52, 53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72,
                       74, 76, 77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96,
                       98, 100, 101, 103, 105, 106, 108, 110, 112, 113, 115, 117,
                       118, 120, 122, 124, 125, 127])
        E_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51,
                       52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                       76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99,
                       100, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119,
                       121, 123, 124, 126, 128])
        E_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50,
                       52, 54, 55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74,
                       76, 78, 79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98,
                       100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119,
                       120, 122, 124, 126, 127])
        F_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                       53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76,
                       77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100,
                       101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 120,
                       122, 124, 125, 127])
        F_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53,
                       55, 56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79,
                       80, 82, 84, 85, 87, 89, 91, 92, 94, 96, 97, 99, 101, 103, 104,
                       106, 108, 109, 111, 113, 115, 116, 118, 120, 121, 123, 125, 127])
        G_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                       55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78,
                       79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102,
                       103, 105, 107, 108, 110, 112, 114, 115, 117, 119, 120, 122,
                       124, 126, 127])
        G_minor = set([31, 33, 34, 36, 38, 39, 41, 43, 45, 46, 48, 50, 51, 53,
                       55, 57, 58, 60, 62, 63, 65, 67, 69, 70, 72, 74, 75, 77, 79,
                       81, 82, 84, 86, 87, 89, 91, 93, 94, 96, 98, 99, 101, 103, 105,
                       106, 108, 110, 111, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        A_major = set([33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56,
                       57, 59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80,
                       81, 83, 85, 86, 88, 90, 92, 93, 95, 97, 98, 100, 102, 104,
                       105, 107, 109, 110, 112, 114, 116, 117, 119, 121, 122, 124,
                       126, 128])
        A_minor = set([33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50, 52, 53, 55,
                       57, 59, 60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77, 79, 81,
                       83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103, 105,
                       107, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 125, 127])
        B_major = set([35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54, 56, 58,
                       59, 61, 63, 64, 66, 68, 70, 71, 73, 75, 76, 78, 80, 82,
                       83, 85, 87, 88, 90, 92, 94, 95, 97, 99, 100, 102, 104, 106,
                       107, 109, 111, 112, 114, 116, 118, 119, 121, 123, 124, 126,
                       128])
        B_minor = set([35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52, 54, 55, 57,
                       59, 61, 62, 64, 66, 67, 69, 71, 72, 74, 76, 77, 79, 81, 83,
                       84, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103, 105, 107,
                       108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 125, 127])
        Bb_major = set([32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55,
                        56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79,
                        80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 97, 99, 101, 103,
                        104, 106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123,
                        125, 127])
        Bb_minor = set([32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54,
                        56, 58, 59, 61, 63, 64, 66, 68, 70, 71, 73, 75, 76, 78,
                        80, 82, 83, 85, 87, 88, 90, 92, 94, 95, 97, 99, 100, 102,
                        104, 106, 107, 109, 111, 112, 114, 116, 118, 119, 121, 123,
                        124, 126, 128])
        Db_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48,
                        49, 51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72,
                        73, 75, 77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96,
                        97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                        118, 120, 121, 123, 125])
        Db_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47,
                        49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                        73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95,
                        97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116,
                        117, 119, 121, 122, 124, 126])
        Eb_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50,
                        51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74,
                        75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98,
                        99, 101, 103, 104, 106, 108, 110, 111, 113, 115, 116, 118,
                        120, 122, 123, 125, 127])
        Eb_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49,
                        51, 53, 54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73,
                        75, 77, 78, 80, 82, 83, 85, 87, 89, 90, 92, 94, 95, 97,
                        99, 101, 102, 104, 106, 107, 109, 111, 113, 114, 116, 118,
                        119, 121, 123, 125, 127])
        Gb_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49,
                        50, 52, 54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73,
                        74, 76, 78, 79, 81, 83, 85, 86, 88, 90, 91, 93, 95, 97,
                        98, 100, 102, 103, 105, 107, 109, 110, 112, 114, 115, 117,
                        119, 121, 122, 124, 126])
        Gb_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48,
                        50, 52, 53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72,
                        74, 76, 77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96,
                        98, 100, 101, 103, 105, 106, 108, 110, 112, 113, 115, 117,
                        118, 120, 122, 124, 125, 127])
        Ab_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48,
                        49, 51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72,
                        73, 75, 77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96,
                        97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                        118, 120, 121, 123, 125])
        Ab_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47,
                        49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                        73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95,
                        97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116,
                        117, 119, 121, 122, 124, 126])
        A_phrygian_major = set([33, 34, 36, 38, 39, 41, 43, 45, 46, 48, 50, 51, 53,
                                55, 57, 58, 60, 62, 63, 65, 67, 69, 70, 72, 74, 75, 77,
                                79, 81, 82, 84, 86, 87, 89, 91, 93, 94, 96, 98, 99, 101,
                                103, 105, 106, 108, 110, 111, 113, 115, 117, 118, 120, 122,
                                123, 125, 127])
        A_phrygian_minor = set([21, 22, 24, 26, 28, 29, 31, 33, 34, 36, 38, 40,
                                41, 43, 45, 46, 48, 50, 52, 53, 55, 57, 58, 60,
                                62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81,
                                82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101,
                                103, 105, 106, 108, 110, 112, 113, 115, 117, 118,
                                120, 122, 124, 125, 127])
        Ab_phrygian_major = set([25, 26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43,
                                45, 47, 49, 50, 52, 54, 55, 57, 59, 61, 62, 64, 66,
                                67, 69, 71, 73, 74, 76, 78, 79, 81, 83, 85, 86, 88,
                                90, 91, 93, 95, 97, 98, 100, 102, 103, 105, 107, 109,
                                110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 127])
        Ab_phyrgian_minor = set([25, 26, 28, 29, 31, 33, 34, 36, 38, 39, 41, 43,
                                44, 46, 48, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65,
                                67, 68, 70, 72, 74, 75, 77, 79, 80, 82, 84, 86, 87,
                                89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106, 108,
                                110, 111, 113, 115, 116, 118, 120, 122, 123, 125, 127])
        B_phrygian_major = set([35, 36, 38, 40, 41, 43, 45, 47, 48, 50, 52, 53,
                                55, 57, 58, 60, 62, 63, 65, 67, 69, 70, 72, 74, 75,
                                77, 79, 81, 82, 84, 86, 87, 89, 91, 93, 94, 96, 98,
                                99, 101, 103, 105, 106, 108, 110, 111, 113, 115, 117,
                                118, 120, 122, 123, 125, 127])
        B_phrygian_minor = set([23, 24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43,
                                45, 47, 48, 50, 52, 53, 55, 57, 58, 60, 62, 64, 65, 67,
                                69, 70, 72, 74, 76, 77, 79, 81, 82, 84, 86, 88, 89, 91,
                                93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 110, 112,
                                113, 115, 117, 118, 120, 122, 124, 125, 127])
        Bb_phrygian_major = set([32, 33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52,
                                54, 56, 57, 59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76,
                                78, 80, 81, 83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100,
                                102, 103, 105, 107, 109, 110, 112, 114, 115, 117, 119, 121,
                                122, 124, 126, 127])
        Bb_phyrgian_minor = set([32, 33, 35, 36, 38, 40, 41, 43, 45, 46, 48, 50, 51, 53,
                                55, 57, 58, 60, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78,
                                80, 82, 83, 85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 102, 103,
                                105, 107, 108, 110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        C_phrygian_major = set([24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43, 45, 47,
                                48, 50, 52, 53, 55, 57, 59, 60, 62, 64, 65, 67, 69, 71, 72,
                                74, 76, 77, 79, 81, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98,
                                100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 117, 119, 120])
        C_phrygian_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46,
                                48, 50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70,
                                72, 74, 75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 92, 94,
                                96, 98, 99, 101, 103, 104, 106, 108, 110, 111, 113, 115,
                                116, 118])
        Db_phrygian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48,
                                49, 51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72,
                                73, 75, 77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96,
                                97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                                118, 120, 121, 123, 125])
        Db_phrygian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47,
                                49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                                73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95,
                                97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116,
                                117, 119, 121, 122, 124, 126])
        D_phrygian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49,
                                50, 52, 54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73,
                                74, 76, 78, 79, 81, 83, 85, 86, 88, 90, 91, 93, 95, 97,
                                98, 100, 102, 103, 105, 107, 109, 110, 112, 114, 115, 117,
                                119, 121, 122, 124, 126])
        D_phrygian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48,
                                50, 52, 53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72,
                                74, 76, 77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96,
                                98, 100, 101, 103, 105, 106, 108, 110, 112, 113, 115, 117,
                                118, 120, 122, 124, 125])
        E_phrygian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51,
                                52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                                76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99,
                                100, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119,
                                121, 123, 124, 126, 128])
        E_phrygian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50,
                                52, 54, 55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74,
                                76, 78, 79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98,
                                100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119,
                                120, 122, 124, 126, 127])
        Eb_phrygian_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50,
                                51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74,
                                75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98,
                                99, 101, 103, 104, 106, 108, 110, 111, 113, 115, 116, 118,
                                120, 122, 123, 125, 127])
        Eb_phrygian_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49,
                                51, 53, 54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73,
                                75, 77, 78, 80, 82, 83, 85, 87, 89, 90, 92, 94, 95, 97,
                                99, 101, 102, 104, 106, 107, 109, 111, 113, 114, 116, 118,
                                119, 121, 123, 125, 127])
        F_phrygian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                                53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76,
                                77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100,
                                101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 120,
                                122, 124, 125, 127])
        F_phrygian_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51,
                                53, 55, 56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75,
                                77, 79, 80, 82, 84, 85, 87, 89, 91, 92, 94, 96, 97, 99,
                                101, 103, 104, 106, 108, 109, 111, 113, 115, 116, 118, 120,
                                121, 123, 125, 127])
        F_phrygian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                                53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76,
                                77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100,
                                101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 120,
                                122, 124, 125, 127])
        G_phrygian_minor = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53,
                                54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77,
                                78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101,
                                102, 104, 106, 108, 109, 111, 113, 114, 116, 118, 120, 121,
                                123, 125, 127])
        G_phrygian_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                                55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78,
                                79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102,
                                103, 105, 107, 108, 110, 112, 114, 115, 117, 119, 120, 122,
                                124, 126, 127])
        Gb_phrygian_minor = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                                53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76,
                                77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100,
                                101, 103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 120,
                                122, 124, 125, 127])
        Gb_phrygian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51,
                                52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                                76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99,
                                100, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119,
                                121, 123, 124, 126, 128])
        A_phrygian_major = set([33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56,
                                57, 59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80,
                                81, 83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103,
                                105, 107, 109, 110, 112, 114, 115, 117, 119, 121, 122, 124,
                                126, 128])
        A_phrygian_minor = set([21, 23, 25, 26, 28, 30, 32, 33, 35, 37, 38, 40, 42, 44,
                                45, 47, 49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 70,
                                71, 73, 75, 77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96,
                                97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                                118, 120, 121, 123, 125, 127])
        Ab_phrygian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48,
                                49, 51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72,
                                73, 75, 77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96,
                                97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                                118, 120, 121, 123, 125, 127])
        Ab_phyrgian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47,
                                49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                                73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95,
                                97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116,
                                117, 119, 121, 122, 124, 126])
        B_phrygian_major = set([35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54, 56, 58,
                                59, 61, 63, 64, 66, 68, 70, 71, 73, 75, 76, 78, 80, 82,
                                83, 85, 87, 88, 90, 92, 94, 95, 97, 99, 100, 102, 104, 106,
                                107, 109, 111, 112, 114, 116, 117, 119, 121, 123, 124, 126,
                                128])
        B_phrygian_minor = set([23, 25, 27, 28, 30, 32, 34, 35, 37, 39, 40, 42, 44, 46,
                                47, 49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                                73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97,
                                99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117,
                                119, 121, 122, 124, 126, 128])
        Bb_phrygian_major = set([32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55,
                                56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79,
                                80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103,
                                105, 106, 108, 110, 111, 113, 115, 117, 118, 120, 122, 124,
                                125, 127])
        Bb_phyrgian_minor = set([32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54,
                                56, 58, 59, 61, 63, 64, 66, 68, 70, 71, 73, 75, 77, 78, 80,
                                82, 83, 85, 87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104,
                                106, 108, 109, 111, 113, 114, 116, 118, 119, 121, 123, 125,
                                127])
        A_dorian_major = set([33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55,
                            57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                            83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105,
                            107, 108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        A_dorian_minor = set([21, 23, 24, 26, 28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45,
                            47, 48, 50, 52, 54, 55, 57, 59, 60, 62, 64, 66, 67, 69, 71,
                            72, 74, 76, 78, 79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96,
                            98, 100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119,
                            120, 122, 124, 126, 127])
        Ab_dorian_major = set([25, 27, 28, 30, 32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49,
                            51, 52, 54, 56, 58, 59, 61, 63, 64, 66, 68, 70, 71, 73, 75,
                            76, 78, 80, 82, 83, 85, 87, 88, 90, 92, 94, 95, 97, 99, 100,
                            102, 104, 106, 107, 109, 111, 112, 114, 116, 118, 119, 121, 123,
                            124, 126, 127])
        Ab_dorian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49,
                            51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                            76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100,
                            102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 122,
                            124, 126, 127])
        B_dorian_major = set([35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56, 57, 59,
                            61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 79, 81, 83, 84,
                            86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108,
                            110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        B_dorian_minor = set([23, 25, 26, 28, 30, 32, 33, 35, 37, 38, 40, 42, 43, 45, 47,
                            48, 50, 52, 54, 55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72,
                            74, 76, 78, 79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98,
                            100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117, 119,
                            120, 122, 124, 126, 127])
        Bb_dorian_major = set([32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54, 56,
                            57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81,
                            83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105,
                            107, 109, 111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 127])
        Bb_dorian_minor = set([32, 33, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 52, 53, 55, 57,
                            58, 60, 62, 63, 65, 67, 68, 70, 72, 73, 75, 77, 78, 80, 82, 83,
                            85, 87, 88, 90, 92, 93, 95, 97, 98, 100, 102, 103, 105, 107, 108,
                            110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        C_dorian_major = set([24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43, 45, 47, 48,
                            50, 52, 53, 55, 57, 59, 60, 62, 64, 65, 67, 69, 71, 72, 74,
                            76, 77, 79, 81, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 100,
                            101, 103, 105, 107, 108, 110, 112, 113, 115, 117, 119, 120])
        C_dorian_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48,
                            50, 51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74,
                            75, 77, 79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99,
                            101, 103, 104, 106, 108, 110, 111, 113, 115, 116, 118])
        Db_dorian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49,
                            51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 73, 75,
                            77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101,
                            102, 104, 106, 108, 109, 111, 113, 114, 116, 118, 120, 121])
        Db_dorian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49,
                            51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                            76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100,
                            102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121])
        D_dorian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50,
                            52, 54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76,
                            78, 79, 81, 83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102,
                            103, 105, 107, 109, 110, 112, 114, 115, 117, 119, 121, 122])
        D_dorian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50,
                            52, 53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76,
                            77, 79, 81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101,
                            103, 105, 106, 108, 110, 112, 113, 115, 117, 118, 120, 122])
        E_dorian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52,
                            54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78,
                            80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104,
                            105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 123, 124])
        E_dorian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52,
                            54, 55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78,
                            79, 81, 83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103,
                            105, 107, 108, 110, 112, 114, 115, 117, 119, 120, 122, 124])
        Eb_dorian_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51,
                            53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77,
                            79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103,
                            104, 106, 108, 110, 111, 113, 115, 116, 118, 120, 122, 123])
        Eb_dorian_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51,
                            53, 54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77,
                            78, 80, 82, 83, 85, 87, 89, 90, 92, 94, 95, 97, 99, 101, 102,
                            104, 106, 107, 109, 111, 113, 114, 116, 118, 119, 121, 123])
        F_dorian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53,
                            55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79,
                            81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105,
                            106, 108, 110, 112, 113, 115, 117, 118, 120, 122, 124, 125])
        F_dorian_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53,
                            55, 56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79,
                            80, 82, 84, 85, 87, 89, 91, 92, 94, 96, 97, 99, 101, 103, 104,
                            106, 108, 109, 111, 113, 114, 116, 118, 119, 121, 123, 125])
        G_dorian_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55,
                            57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                            83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107,
                            108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        G_dorian_minor = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54,
                            56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80,
                            82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 103, 104, 106,
                            108, 109, 111, 113, 115, 116, 118, 120, 121, 123, 125, 127])
        Gb_dorian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52,
                            54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78,
                            80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104,
                            105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 123, 124])
        Gb_dorian_minor = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51,
                            53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77,
                            79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103,
                            104, 106, 108, 110, 111, 113, 115, 116, 118, 120, 122, 123])
        A_ionian_major = set([33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56, 57,
                            59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80, 81, 83,
                            85, 86, 88, 90, 92, 93, 95, 97, 98, 100, 102, 104, 105, 107,
                            109, 110, 112, 114, 116, 117, 119, 121, 122, 124, 126, 127])
        A_ionian_minor = set([21, 23, 25, 26, 28, 30, 32, 33, 35, 37, 38, 40, 42, 44, 45,
                            47, 49, 51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71,
                            73, 75, 76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97,
                            99, 100, 102, 104, 105, 107, 109, 111, 112, 114, 116, 117,
                            119, 121, 123, 124, 126, 128])
        Ab_ionian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49,
                            51, 53, 54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 73, 75,
                            77, 78, 80, 82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101,
                            102, 104, 106, 108, 109, 111, 113, 114, 116, 118, 120, 121,
                            123, 125, 127])
        Ab_ionian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49,
                            51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75,
                            76, 78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100,
                            102, 104, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121,
                            122, 124, 126, 128])
        B_ionian_major = set([35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54, 56, 58, 59, 61,
                            63, 64, 66, 68, 70, 71, 73, 75, 76, 78, 80, 82, 83, 85, 87, 88,
                            90, 92, 94, 95, 97, 99, 100, 102, 104, 106, 107, 109, 111, 112,
                            114, 116, 118, 119, 121, 123, 124, 126, 128])
        B_ionian_minor = set([23, 25, 27, 28, 30, 32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49,
                            51, 52, 54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76,
                            78, 80, 81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102,
                            104, 105, 107, 109, 111, 112, 114, 116, 117, 119, 121, 122, 124,
                            126, 128])
        Bb_ionian_major = set([32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55, 56, 58,
                            60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79, 80, 82, 84, 86,
                            87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 105, 106, 108, 110, 111,
                            113, 115, 117, 118, 120, 122, 124, 125, 127])
        Bb_ionian_minor = set([32, 34, 35, 37, 39, 40, 42, 44, 46, 47, 49, 51, 52, 54, 56, 58,
                            59, 61, 63, 64, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83, 85,
                            87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 106, 108, 109, 111,
                            113, 114, 116, 118, 119, 121, 123, 125, 127])
        C_ionian_major = set([24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50,
                            52, 53, 55, 57, 59, 60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77,
                            79, 81, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103,
                            105, 107, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 125])
        C_ionian_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51,
                            53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79,
                            80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104,
                            106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123, 125, 127])
        Db_ionian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 53,
                            54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 78, 80,
                            82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106,
                            108, 109, 111, 113, 114, 116, 118, 120, 121, 123, 125, 127])
        Db_ionian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52,
                            54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80,
                            81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105,
                            107, 109, 111, 112, 114, 116, 117, 119, 121, 122, 124, 126, 127])
        D_ionian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52, 54,
                            55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 81,
                            83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103, 105, 107,
                            109, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 127])
        D_ionian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                            53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79,
                            81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105,
                            106, 108, 110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        E_ionian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54, 56,
                            57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83,
                            85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109,
                            111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        E_ionian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                            55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                            83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107,
                            108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        Eb_ionian_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53,
                            55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80,
                            82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106,
                            108, 110, 111, 113, 115, 116, 118, 120, 122, 123, 125, 127])
        Eb_ionian_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53,
                            54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80,
                            82, 83, 85, 87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 106,
                            107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        F_ionian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55,
                            57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81, 82,
                            84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108,
                            110, 112, 113, 115, 117, 118, 120, 122, 124, 125, 127])
        F_ionian_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55,
                            56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79, 80, 82,
                            84, 85, 87, 89, 91, 92, 94, 96, 97, 99, 101, 103, 104, 106, 108,
                            109, 111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        G_ionian_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55, 57,
                            59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81, 83, 84,
                            86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110,
                            112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        G_ionian_minor = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54, 56,
                            58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83,
                            85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106, 108, 109,
                            111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        Gb_ionian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54,
                            56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81,
                            83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107,
                            109, 111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        Gb_ionian_minor = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53,
                            55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80,
                            82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106,
                            108, 110, 111, 113, 115, 116, 118, 120, 122, 123, 125, 127])
        Ab_lydian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52,
                            54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79,
                            81, 83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103, 105,
                            107, 109, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 127])
        Ab_lydian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                            53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79,
                            81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105,
                            106, 108, 110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        A_lydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54, 56,
                            57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83,
                            85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109,
                            111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        A_lydian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                            55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                            83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107,
                            108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        B_lydian_major = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54, 56, 58,
                            59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83, 85,
                            87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 106, 107, 109, 111,
                            113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        B_lydian_minor = set([30, 32, 33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56,
                            57, 59, 61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80, 81, 83,
                            85, 86, 88, 90, 92, 93, 95, 97, 98, 100, 102, 104, 105, 107, 109,
                            110, 112, 114, 116, 117, 119, 121, 122, 124, 126, 127])
        Bb_lydian_major = set([33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56, 57, 59,
                            61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80, 81, 83, 85, 86,
                            88, 90, 92, 93, 95, 97, 98, 100, 102, 104, 105, 107, 109, 110, 112,
                            114, 116, 117, 119, 121, 123, 124, 126, 128])
        Bb_lydian_minor = set([33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50, 52, 53, 55, 57, 59,
                            60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77, 79, 81, 83, 84, 86,
                            88, 89, 91, 93, 95, 96, 98, 100, 101, 103, 105, 107, 108, 110, 112,
                            113, 115, 117, 119, 120, 122, 124, 125, 127])
        C_lydian_major = set([24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50,
                            52, 53, 55, 57, 59, 60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77,
                            79, 81, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103,
                            105, 107, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 125])
        C_lydian_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51,
                            53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79,
                            80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104,
                            106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123, 125, 127])
        Db_lydian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 53,
                            54, 56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 78, 80,
                            82, 84, 85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106,
                            108, 109, 111, 113, 114, 116, 118, 120, 121, 123, 125, 127])
        Db_lydian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52,
                            54, 56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80,
                            81, 83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105,
                            107, 109, 111, 112, 114, 116, 117, 119, 121, 122, 124, 126, 127])
        D_lydian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52, 54,
                            55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 81,
                            83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103, 105, 107,
                            109, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 127])
        D_lydian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                            53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79,
                            81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105,
                            106, 108, 110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        E_lydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54,
                              56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81,
                              83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107,
                              109, 111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        E_lydian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                              55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                              83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107,
                              108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        Eb_lydian_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53,
                              55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80,
                              82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106,
                              108, 110, 111, 113, 115, 116, 118, 120, 122, 123, 125, 127])
        Eb_lydian_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53,
                              54, 56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80,
                              82, 83, 85, 87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 106,
                              107, 109, 111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        F_lydian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55,
                              57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81, 82,
                              84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108,
                              110, 112, 113, 115, 117, 118, 120, 122, 124, 125, 127])
        F_lydian_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55,
                              56, 58, 60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79, 80, 82,
                              84, 85, 87, 89, 91, 92, 94, 96, 97, 99, 101, 103, 104, 106, 108,
                              109, 111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        G_lydian_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55, 57,
                              59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81, 83, 84,
                              86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110,
                              112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        G_lydian_minor = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54, 56,
                              58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83,
                              85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106, 108, 109,
                              111, 113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        Gb_lydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54,
                              56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81,
                              83, 85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107,
                              109, 111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        Gb_lydian_minor = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53,
                              55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80,
                              82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106,
                              108, 110, 111, 113, 115, 116, 118, 120, 122, 123, 125, 127])
        Ab_mixolydian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52,
                                  54, 55, 57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79,
                                  81, 83, 85, 86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103, 105,
                                  107, 109, 110, 112, 114, 115, 117, 119, 121, 122, 124, 126, 127])
        Ab_mixolydian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52,
                                  53, 55, 57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79,
                                  81, 82, 84, 86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105,
                                  106, 108, 110, 112, 113, 115, 117, 118, 120, 122, 123, 125, 127])
        A_mixolydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54, 56,
                                  57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83,
                                  85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109,
                                  111, 112, 114, 116, 117, 119, 121, 123, 124, 126, 128])
        A_mixolydian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54,
                                  55, 57, 59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81,
                                  83, 84, 86, 88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107,
                                  108, 110, 112, 114, 115, 117, 119, 120, 122, 124, 126, 127])
        Bb_mixolydian_major = set([33, 35, 37, 38, 40, 42, 44, 45, 47, 49, 50, 52, 54, 56, 57, 59,
                                  61, 62, 64, 66, 68, 69, 71, 73, 74, 76, 78, 80, 81, 83, 85, 86,
                                  88, 90, 92, 93, 95, 97, 98, 100, 102, 104, 105, 107, 109, 110, 112,
                                  114, 116, 117, 119, 121, 123, 124, 126, 128])
        Bb_mixolydian_minor = set([33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50, 52, 53, 55, 57, 59,
                                  60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77, 79, 81, 83, 84, 86,
                                  88, 89, 91, 93, 95, 96, 98, 100, 101, 103, 105, 107, 108, 110, 112,
                                  113, 115, 117, 119, 120, 122, 124, 125, 127])
        B_mixolydian_major = set([34, 36, 38, 39, 41, 43, 45, 46, 48, 50, 51, 53, 55, 57, 58, 60,
                                  62, 63, 65, 67, 69, 70, 72, 74, 75, 77, 79, 81, 82, 84, 86, 87,
                                  89, 91, 93, 94, 96, 98, 99, 101, 103, 105, 106, 108, 110, 111, 113,
                                  115, 117, 118, 120, 122, 123, 125, 127])
        B_mixolydian_minor = set([34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60,
                                  61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 78, 80, 82, 84, 85, 87,
                                  89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106, 108, 109, 111, 113,
                                  114, 116, 118, 120, 121, 123, 125, 126, 128])
        C_mixolydian_major = set([24, 26, 28, 29, 31, 33, 35, 36, 38, 40, 41, 43, 45, 47, 48, 50,
                                  52, 53, 55, 57, 59, 60, 62, 64, 65, 67, 69, 71, 72, 74, 76, 77,
                                  79, 81, 83, 84, 86, 88, 89, 91, 93, 95, 96, 98, 100, 101, 103,
                                  105, 107, 108, 110, 112, 113, 115, 117, 119, 120, 122, 124, 125])
        C_mixolydian_minor = set([24, 26, 27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50,
                                  51, 53, 55, 56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77,
                                  79, 80, 82, 84, 86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104,
                                  106, 108, 110, 111, 113, 115, 116, 118, 120, 121, 123, 125, 127])
        Db_mixolydian_major = set([25, 27, 29, 30, 32, 34, 36, 37, 39, 41, 42, 44, 46, 48, 49, 51, 53, 54,
                                  56, 58, 60, 61, 63, 65, 66, 68, 70, 72, 73, 75, 77, 78, 80, 82, 84,
                                  85, 87, 89, 90, 92, 94, 96, 97, 99, 101, 102, 104, 106, 108, 109, 111,
                                  113, 114, 116, 118, 120, 121, 123, 125, 127])
        Db_mixolydian_minor = set([25, 27, 28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54,
                                  56, 57, 59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83,
                                  85, 87, 88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 111,
                                  112, 114, 116, 117, 119, 121, 123, 124, 126, 127])
        D_mixolydian_major = set([26, 28, 30, 31, 33, 35, 37, 38, 40, 42, 43, 45, 47, 49, 50, 52, 54, 55,
                                  57, 59, 61, 62, 64, 66, 67, 69, 71, 73, 74, 76, 78, 79, 81, 83, 85,
                                  86, 88, 90, 91, 93, 95, 97, 98, 100, 102, 103, 105, 107, 109, 110, 112,
                                  114, 115, 117, 119, 121, 122, 124, 126, 127])
        D_mixolydian_minor = set([26, 28, 29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55,
                                  57, 58, 60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81, 82, 84,
                                  86, 88, 89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 110, 112,
                                  113, 115, 117, 118, 120, 122, 123, 125, 127])
        E_mixolydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54, 56, 57,
                                  59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83, 85, 87,
                                  88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114,
                                  116, 117, 119, 121, 123, 124, 126, 128])
        E_mixolydian_minor = set([28, 30, 31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55, 57,
                                  59, 60, 62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81, 83, 84, 86,
                                  88, 90, 91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110, 112, 114,
                                  115, 117, 119, 120, 122, 124, 126, 127])
        Eb_mixolydian_major = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53, 55,
                                  56, 58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80, 82, 84,
                                  86, 87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106, 108, 110, 111,
                                  113, 115, 116, 118, 120, 122, 123, 125, 127])
        Eb_mixolydian_minor = set([27, 29, 30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54,
                                  56, 58, 59, 61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83,
                                  85, 87, 89, 90, 92, 94, 95, 97, 99, 101, 102, 104, 106, 107, 109, 111,
                                  113, 114, 116, 118, 119, 121, 123, 125, 126, 128])
        F_mixolydian_major = set([29, 31, 33, 34, 36, 38, 40, 41, 43, 45, 46, 48, 50, 52, 53, 55, 57, 58,
                                  60, 62, 64, 65, 67, 69, 70, 72, 74, 76, 77, 79, 81, 82, 84, 86, 88,
                                  89, 91, 93, 94, 96, 98, 100, 101, 103, 105, 106, 108, 110, 112, 113, 115,
                                  117, 118, 120, 122, 124, 125, 127])
        F_mixolydian_minor = set([29, 31, 32, 34, 36, 37, 39, 41, 43, 44, 46, 48, 49, 51, 53, 55, 56, 58,
                                  60, 61, 63, 65, 67, 68, 70, 72, 73, 75, 77, 79, 80, 82, 84, 85, 87,
                                  89, 91, 92, 94, 96, 97, 99, 101, 103, 104, 106, 108, 109, 111, 113, 114,
                                  116, 118, 119, 121, 123, 125, 126, 128])
        G_mixolydian_major = set([31, 33, 35, 36, 38, 40, 42, 43, 45, 47, 48, 50, 52, 54, 55, 57, 59, 60,
                                  62, 64, 66, 67, 69, 71, 72, 74, 76, 78, 79, 81, 83, 84, 86, 88, 90,
                                  91, 93, 95, 96, 98, 100, 102, 103, 105, 107, 108, 110, 112, 114, 115, 117,
                                  119, 120, 122, 124, 126, 127])
        G_mixolydian_minor = set([30, 32, 34, 35, 37, 39, 41, 42, 44, 46, 47, 49, 51, 53, 54, 56, 58, 59,
                                  61, 63, 65, 66, 68, 70, 71, 73, 75, 77, 78, 80, 82, 83, 85, 87, 89,
                                  90, 92, 94, 96, 97, 99, 101, 102, 104, 106, 108, 109, 111, 113, 114, 116,
                                  118, 119, 121, 123, 125, 126, 128])
        Gb_mixolydian_major = set([28, 30, 32, 33, 35, 37, 39, 40, 42, 44, 45, 47, 49, 51, 52, 54, 56, 57,
                                  59, 61, 63, 64, 66, 68, 69, 71, 73, 75, 76, 78, 80, 81, 83, 85, 87,
                                  88, 90, 92, 93, 95, 97, 99, 100, 102, 104, 105, 107, 109, 111, 112, 114,
                                  116, 117, 119, 121, 123, 124, 126, 128])
        Gb_mixolydian_minor = set([27, 29, 31, 32, 34, 36, 38, 39, 41, 43, 44, 46, 48, 50, 51, 53, 55, 56,
                                  58, 60, 62, 63, 65, 67, 68, 70, 72, 74, 75, 77, 79, 80, 82, 84, 86,
                                  87, 89, 91, 92, 94, 96, 98, 99, 101, 103, 104, 106, 108, 110, 111, 113,
                                  115, 116, 118, 120, 122, 123, 125, 127])

        self.key_ord = ['C_major', 'C_minor', 'D_major', 'D_minor', 'E_major', 'E_minor',
                          'F_major', 'F_minor', 'G_major', 'G_minor', 'A_major', 'A_minor',
                          'B_major', 'B_minor', 'Db_major', 'Db_minor', 'Eb_major', 'Eb_minor',
                          'Gb_major', 'Gb_minor', 'Ab_major', 'Ab_minor', 'A_phrygian_major', 'A_phrygian_minor',
                          'Ab_phrygian_major', 'Ab_phyrgian_minor', 'B_phrygian_major', 'B_phrygian_minor',
                          'Bb_phrygian_major', 'Bb_phyrgian_minor', 'C_phrygian_major', 'C_phrygian_minor',
                          'Db_phrygian_major', 'Db_phrygian_minor', 'D_phrygian_major', 'D_phrygian_minor',
                          'E_phrygian_major', 'E_phrygian_minor', 'F_phrygian_major', 'F_phrygian_minor',
                          'Eb_phrygian_major', 'Eb_phrygian_minor', 'Gb_phrygian_major', 'Gb_phrygian_minor',
                          'G_phrygian_major', 'G_phrygian_minor', 'A_phrygian_major', 'A_phrygian_minor',
                          'Ab_dorian_major', 'Ab_dorian_minor', 'B_dorian_major', 'B_dorian_minor', 'Bb_dorian_major',
                          'Bb_dorian_minor', 'C_dorian_major', 'C_dorian_minor', 'Db_dorian_major', 'Db_dorian_minor', 'D_dorian_major',
                          'D_dorian_minor', 'E_dorian_major', 'E_dorian_minor', 'F_dorian_major', 'F_dorian_minor', 'Eb_dorian_major',
                          'Eb_dorian_minor', 'Gb_dorian_major', 'Gb_dorian_minor', 'G_dorian_major', 'G_dorian_minor', 'A_dorian_major',
                          'A_dorian_minor', 'Ab_dorian_major', 'Ab_dorian_minor', 'B_dorian_major', 'B_dorian_minor', 'Bb_dorian_major',
                          'Bb_dorian_minor', 'C_dorian_major', 'C_dorian_minor', 'Db_dorian_major', 'Db_dorian_minor', 'D_dorian_major',
                          'D_dorian_minor', 'E_dorian_major', 'E_dorian_minor', 'F_dorian_major', 'F_dorian_minor', 'Eb_dorian_major',
                          'A_lydian_major', 'A_lydian_minor', 'Ab_lydian_major', 'Ab_lydian_minor', 'B_lydian_major', 'B_lydian_minor',
                          'Bb_lydian_major', 'Bb_lydian_minor', 'C_lydian_major', 'C_lydian_minor', 'Db_lydian_major', 'Db_lydian_minor',
                          'D_lydian_major', 'D_lydian_minor', 'E_lydian_major', 'E_lydian_minor', 'F_lydian_major', 'F_lydian_minor',
                          'Eb_lydian_major', 'Eb_lydian_minor', 'Gb_lydian_major', 'Gb_lydian_minor', 'G_lydian_major', 'G_lydian_minor',
                          'Ab_mixolydian_major', 'Ab_mixolydian_minor', 'A_mixolydian_major', 'A_mixolydian_minor', 'Bb_mixolydian_major',
                          'Bb_mixolydian_minor', 'B_mixolydian_major', 'B_mixolydian_minor', 'C_mixolydian_major', 'C_mixolydian_minor',
                          'Db_mixolydian_major', 'Db_mixolydian_minor', 'D_mixolydian_major', 'D_mixolydian_minor', 'E_mixolydian_major',
                          'E_mixolydian_minor', 'F_mixolydian_major', 'F_mixolydian_minor', 'Gb_mixolydian_major', 'Gb_mixolydian_minor',
                          'G_mixolydian_major', 'G_mixolydian_minor', 'A_ionian_major', 'A_ionian_minor', 'Ab_ionian_major', 'Ab_ionian_minor',
                          'Bb_ionian_major', 'Bb_ionian_minor', 'B_ionian_major', 'B_ionian_minor', 'C_ionian_major', 'C_ionian_minor',
                          'Db_ionian_major', 'Db_ionian_minor', 'D_ionian_major', 'D_ionian_minor', 'E_ionian_major', 'E_ionian_minor',
                          'F_ionian_major', 'F_ionian_minor', 'G_ionian_major', 'G_ionian_minor', 'Gb_ionian_major', 'Gb_ionian_minor',
                          'Eb_dorian_major', 'Eb_dorian_minor', 'Gb_dorian_major', 'Gb_dorian_minor', 'G_dorian_major', 'G_dorian_minor',]



        if key == 'C_major':
            select_key = C_major
        elif key == 'C_minor':
            select_key = C_minor
        elif key == 'D_major':
            key = D_major
        elif key == 'D_minor':
            select_key = D_minor
        elif key == 'E_major':
            select_key = E_major
        elif key == 'E_minor':
            select_key = E_minor
        elif key == 'F_major':
            select_key = F_major
        elif key == 'F_minor':
            select_key = F_minor
        elif key == 'G_major':
            select_key = G_major
        elif key == 'G_minor':
            select_key = G_minor
        elif key == 'A_major':
            select_key = A_major
        elif key == 'A_minor':
            select_key = A_minor
        elif key == 'B_major':
            select_key = B_major
        elif key == 'B_minor':
            select_key = B_minor
        elif key == 'Bb_major':
            select_key = Bb_major
        elif key == 'Bb_minor':
            select_key = Bb_minor
        elif key == 'Db_major':
            select_key = Db_major
        elif key == 'Db_minor':
            select_key = Db_minor
        elif key == 'Eb_major':
            select_key = Eb_major
        elif key == 'Eb_minor':
            select_key = Eb_minor
        elif key == 'Gb_major':
            select_key = Gb_major
        elif key == 'Gb_minor':
            select_key = Gb_minor
        elif key == 'Ab_major':
            select_key = Ab_major
        elif key == 'Ab_minor':
            select_key = Ab_minor
        elif key == 'A_phrygian_major':
            select_key = A_phrygian_major
        elif key == 'A_phrygian_minor':
            select_key = A_phrygian_minor
        elif key == 'Ab_phrygian_major':
            select_key = Ab_phrygian_major
        elif key == 'Ab_phyrgian_minor':
            select_key = Ab_phyrgian_minor
        elif key == 'B_phrygian_major':
            select_key = B_phrygian_major
        elif key == 'B_phrygian_minor':
            select_key = B_phrygian_minor
        elif key == 'Bb_phrygian_major':
            select_key = Bb_phrygian_major
        elif key == 'Bb_phyrgian_minor':
            select_key = Bb_phyrgian_minor
        elif key == 'C_phrygian_major':
            select_key = C_phrygian_major
        elif key == 'C_phrygian_minor':
            select_key = C_phrygian_minor
        elif key == 'Db_phrygian_major':
            select_key = Db_phrygian_major
        elif key == 'Db_phrygian_minor':
            select_key = Db_phrygian_minor
        elif key == 'D_phrygian_major':
            select_key = D_phrygian_major
        elif key == 'D_phrygian_minor':
            select_key = D_phrygian_minor
        elif key == 'E_phrygian_major':
            select_key = E_phrygian_major
        elif key == 'E_phrygian_minor':
            select_key = E_phrygian_minor
        elif key == 'F_phrygian_major':
            select_key = F_phrygian_major
        elif key == 'F_phrygian_minor':
            select_key = F_phrygian_minor
        elif key == 'Eb_phrygian_major':
            select_key = Eb_phrygian_major
        elif key == 'Eb_phrygian_minor':
            select_key = Eb_phrygian_minor
        elif key == 'Gb_phrygian_major':
            select_key = Gb_phrygian_major
        elif key == 'Gb_phrygian_minor':
            select_key = Gb_phrygian_minor
        elif key == 'G_phrygian_major':
            select_key = G_phrygian_major
        elif key == 'G_phrygian_minor':
            select_key = G_phrygian_minor
        elif key == 'A_dorian_major':
            select_key = A_dorian_major
        elif key == 'A_dorian_minor':
            select_key = A_dorian_minor
        elif key == 'Ab_dorian_major':
            select_key = Ab_dorian_major
        elif key == 'Ab_dorian_minor':
            select_key = Ab_dorian_minor
        elif key == 'B_dorian_major':
            select_key = B_dorian_major
        elif key == 'B_dorian_minor':
            select_key = B_dorian_minor
        elif key == 'Bb_dorian_major':
            select_key = Bb_dorian_major
        elif key == 'Bb_dorian_minor':
            select_key = Bb_dorian_minor
        elif key == 'C_dorian_major':
            select_key = C_dorian_major
        elif key == 'C_dorian_minor':
            select_key = C_dorian_minor
        elif key == 'Db_dorian_major':
            select_key = Db_dorian_major
        elif key == 'Db_dorian_minor':
            select_key = Db_dorian_minor
        elif key == 'D_dorian_major':
            select_key = D_dorian_major
        elif key == 'D_dorian_minor':
            select_key = D_dorian_minor
        elif key == 'E_dorian_major':
            select_key = E_dorian_major
        elif key == 'E_dorian_minor':
            select_key = E_dorian_minor
        elif key == 'F_dorian_major':
            select_key = F_dorian_major
        elif key == 'F_dorian_minor':
            select_key = F_dorian_minor
        elif key == 'Eb_dorian_major':
            select_key = Eb_dorian_major
        elif key == 'Eb_dorian_minor':
            select_key = Eb_dorian_minor
        elif key == 'Gb_dorian_major':
            select_key = Gb_dorian_major
        elif key == 'Gb_dorian_minor':
            select_key = Gb_dorian_minor
        elif key == 'G_dorian_major':
            select_key = G_dorian_major
        elif key == 'G_dorian_minor':
            select_key = G_dorian_minor
        elif key == 'A_ionian_major':
            select_key = A_ionian_major
        elif key == 'A_ionian_minor':
            select_key = A_ionian_minor
        elif key == 'Ab_ionian_major':
            select_key = Ab_ionian_major
        elif key == 'Ab_ionian_minor':
            select_key = Ab_ionian_minor
        elif key == 'B_ionian_major':
            select_key = B_ionian_major
        elif key == 'B_ionian_minor':
            select_key = B_ionian_minor
        elif key == 'Bb_ionian_major':
            select_key = Bb_ionian_major
        elif key == 'Bb_ionian_minor':
            select_key = Bb_ionian_minor
        elif key == 'C_ionian_major':
            select_key = C_ionian_major
        elif key == 'C_ionian_minor':
            select_key = C_ionian_minor
        elif key == 'Db_ionian_major':
            select_key = Db_ionian_major
        elif key == 'Db_ionian_minor':
            select_key = Db_ionian_minor
        elif key == 'D_ionian_major':
            select_key = D_ionian_major
        elif key == 'D_ionian_minor':
            select_key = D_ionian_minor
        elif key == 'E_ionian_major':
            select_key = E_ionian_major
        elif key == 'E_ionian_minor':
            select_key = E_ionian_minor
        elif key == 'F_ionian_major':
            select_key = F_ionian_major
        elif key == 'F_ionian_minor':
            select_key = F_ionian_minor
        elif key == 'Eb_ionian_major':
            select_key = Eb_ionian_major
        elif key == 'Eb_ionian_minor':
            select_key = Eb_ionian_minor
        elif key == 'Gb_ionian_major':
            select_key = Gb_ionian_major
        elif key == 'Gb_ionian_minor':
            select_key = Gb_ionian_minor
        elif key == 'G_ionian_major':
            select_key = G_ionian_major
        elif key == 'G_ionian_minor':
            select_key = G_ionian_minor
        elif key == 'A_lydian_major':
            select_key = A_lydian_major
        elif key == 'A_lydian_minor':
            select_key = A_lydian_minor
        elif key == 'Ab_lydian_major':
            select_key = Ab_lydian_major
        elif key == 'Ab_lydian_minor':
            select_key = Ab_lydian_minor
        elif key == 'B_lydian_major':
            select_key = B_lydian_major
        elif key == 'B_lydian_minor':
            select_key = B_lydian_minor
        elif key == 'Bb_lydian_major':
            select_key = Bb_lydian_major
        elif key == 'Bb_lydian_minor':
            select_key = Bb_lydian_minor
        elif key == 'C_lydian_major':
            select_key = C_lydian_major
        elif key == 'C_lydian_minor':
            select_key = C_lydian_minor
        elif key == 'Db_lydian_major':
            select_key = Db_lydian_major
        elif key == 'Db_lydian_minor':
            select_key = Db_lydian_minor
        elif key == 'D_lydian_major':
            select_key = D_lydian_major
        elif key == 'D_lydian_minor':
            select_key = D_lydian_minor
        elif key == 'E_lydian_major':
            select_key = E_lydian_major
        elif key == 'E_lydian_minor':
            select_key = E_lydian_minor
        elif key == 'Eb_lydian_major':
            select_key = Eb_lydian_major
        elif key == 'Eb_lydian_minor':
            select_key = Eb_lydian_minor
        elif key == 'F_lydian_major':
            select_key = F_lydian_major
        elif key == 'F_lydian_minor':
            select_key = F_lydian_minor
        elif key == 'Gb_lydian_major':
            select_key = Gb_lydian_major
        elif key == 'Gb_lydian_minor':
            select_key = Gb_lydian_minor
        elif key == 'G_lydian_major':
            select_key = G_lydian_major
        elif key == 'G_lydian_minor':
            select_key = G_lydian_minor
        elif key == 'A_mixolydian_major':
            select_key = A_mixolydian_major
        elif key == 'A_mixolydian_minor':
            select_key = A_mixolydian_minor
        elif key == 'Ab_mixolydian_major':
            select_key = Ab_mixolydian_major
        elif key == 'Ab_mixolydian_minor':
            select_key = Ab_mixolydian_minor
        elif key == 'B_mixolydian_major':
            select_key = B_mixolydian_major
        elif key == 'B_mixolydian_minor':
            select_key = B_mixolydian_minor
        elif key == 'Bb_mixolydian_major':
            select_key = Bb_mixolydian_major
        elif key == 'Bb_mixolydian_minor':
            select_key = Bb_mixolydian_minor
        elif key == 'C_mixolydian_major':
            select_key = C_mixolydian_major
        elif key == 'C_mixolydian_minor':
            select_key = C_mixolydian_minor
        elif key == 'Db_mixolydian_major':
            select_key = Db_mixolydian_major
        elif key == 'Db_mixolydian_minor':
            select_key = Db_mixolydian_minor
        elif key == 'D_mixolydian_major':
            select_key = D_mixolydian_major
        elif key == 'D_mixolydian_minor':
            select_key = D_mixolydian_minor
        elif key == 'E_mixolydian_major':
            select_key = E_mixolydian_major
        elif key == 'E_mixolydian_minor':
            select_key = E_mixolydian_minor
        elif key == 'Eb_mixolydian_major':
            select_key = Eb_mixolydian_major
        elif key == 'Eb_mixolydian_minor':
            select_key = Eb_mixolydian_minor
        elif key == 'F_mixolydian_major':
            select_key = F_mixolydian_major
        elif key == 'F_mixolydian_minor':
            select_key = F_mixolydian_minor
        elif key == 'Gb_mixolydian_major':
            select_key = Gb_mixolydian_major
        elif key == 'Gb_mixolydian_minor':
            select_key = Gb_mixolydian_minor
        elif key == 'G_mixolydian_major':
            select_key = G_mixolydian_major
        else:
            select_key = G_mixolydian_minor


        note_correct = pitch
        if note_correct not in select_key:
            if note_correct >= 127:
                pass
            else:
                note_correct+=1
        return note_correct

    def _create_sequences(self,
        dataset: tf.data.Dataset,
        seq_length: int,
        vocab_size = 128,
        ) -> tf.data.Dataset:

        seq_length = seq_length+1

        # Take 1 extra for the labels
        windows = dataset.window(seq_length, shift=1, stride=1,
                                    drop_remainder=True)

        # `flat_map` flattens the" dataset of datasets" into a dataset of tensors
        flatten = lambda x: x.batch(seq_length, drop_remainder=True)
        sequences = windows.flat_map(flatten)

        # Normalize note pitch
        def scale_pitch(x):
            x = x/[vocab_size,1.0,1.0]
            return x

        # Split the labels
        def split_labels(sequences):
            inputs = sequences[:-1]
            labels_dense = sequences[-1]
            labels = {key:labels_dense[i] for i,key in enumerate(self.key_order)}

            return scale_pitch(inputs), labels

        return sequences.map(split_labels, num_parallel_calls=tf.data.AUTOTUNE)

    def _predict_next_note(
        self,
        notes: np.ndarray,
        temperature: float = 1.0) -> tuple[int, float, float]:

        assert temperature > 0

        # Add batch dimension
        inputs = tf.expand_dims(notes, 0)

        predictions = self.model.predict(inputs)
        pitch_logits = predictions['pitch']
        step = predictions['step']
        duration = predictions['duration']

        pitch_logits /= temperature
        pitch = tf.random.categorical(pitch_logits, num_samples=1)
        pitch = tf.squeeze(pitch, axis=-1)
        duration = tf.squeeze(duration, axis=-1)
        step = tf.squeeze(step, axis=-1)

        # `step` and `duration` values should be non-negative
        step = tf.maximum(0, step)
        duration = tf.maximum(0, duration)

        return int(pitch), float(step), float(duration)

    def generate_notes_from_midi_file(self, sample_file, key='C_phrygian_major', seq_length=25 ,vocab_size = 128, temperature = 2.0, num_predictions = 120):

        raw_notes = self._midi_to_notes(sample_file)
        sample_notes = np.stack([raw_notes[key] for key in self.key_order], axis=1)

        # The initial sequence of notes; pitch is normalized similar to training
        # sequences
        input_notes = (
            sample_notes[:seq_length] / np.array([vocab_size, 1, 1]))

        generated_notes = []
        prev_start = 0
        for _ in range(num_predictions):
            pitch, step, duration = self._predict_next_note(input_notes, temperature)
            start = prev_start + step
            end = start + duration

            #adjust to the key you want

            pitch = self._adjust_pitch_to_scale(pitch, key=key)

            input_note = (pitch, step, duration)
            generated_notes.append((*input_note, start, end))
            input_notes = np.delete(input_notes, 0, axis=0)
            input_notes = np.append(input_notes, np.expand_dims(input_note, 0), axis=0)
            prev_start = start

        generated_notes = pd.DataFrame(
            generated_notes, columns=(*self.key_order, 'start', 'end'))

        return generated_notes


if __name__ == "__main__":

    # Find midi data in directory
    path = '/Users/phila/code/Philhobs/Sound-To-Symphony/Abelton/MAESTRO/Data'
    my_data = [f for f in os.listdir(path) if f.lower().endswith('.midi')]


    # Instantiate model
    RNN = RNN_Model()

    RNN.compile_model()

    # Process and train data
    train_ds = RNN.process_data(my_data)
    history = RNN.fit_data(train_ds, epochs=1)  # epochs = 50 is best

    # Sample for predicting next notes. Correcting the path for the sample
    sample_file_path = os.path.join(path, my_data[1])  # Append the directory to the filename

    # Get instrument data from sample. Now using the corrected path
    try:
        pm = pretty_midi.PrettyMIDI(sample_file_path)
        instrument = pm.instruments[0]
        instrument_name = pretty_midi.program_to_instrument_name(instrument.program)

    except FileNotFoundError:
        print(f"File not found: {sample_file_path}")
        exit()


    # Generate notes from model
    gen_notes = RNN.generate_notes_from_midi_file(sample_file_path)  # Use the full path

    # Print generated notes
    print(gen_notes)

    # Or write to a MIDI file
    #out_file = '/Users/phila/code/Philhobs/Sound-To-Symphony/Abelton/midi_output/output_midi.mid'
    out_file = '/Users/phila/code/Philhobs/Sound-To-Symphony/Abelton/MAESTRO/Data/MIDI-Unprocessed_05_R1_2008_01-04_ORIG_MID--AUDIO_05_R1_2008_wav--4.midi'
    out_pm = RNN._notes_to_midi(gen_notes, out_file=out_file, instrument_name=instrument_name)

    print(" --- completed ---")


#ADDED FROM HERE
# Function to generate MIDI file using the RNN model and return its path
'''def generate_midi(out_pm, base_path= out_file, presample_file_path=out_file):
    """
    Generates a new MIDI file using the RNN model and returns the file path.

    Parameters:
    - model: The instance of the RNN_Model class.
    - base_path: The base directory to save generated MIDI files.
    - sample_file_path: The path to a sample MIDI file to base the generation on.

    Returns:
    - The path to the generated MIDI file.
    """
    # Generate the notes using the RNN model
    gen_notes = model.generate_notes_from_midi_file(presample_file_path)

    # Construct a unique file name based on the current timestamp
    timestamp = int(time.time())
    file_name = f"generated_{timestamp}.mid"
    output_file_path = os.path.join(base_path, file_name)

    # Use the model's method to save the generated notes to a MIDI file
    model._notes_to_midi(gen_notes, out_file=output_file_path, instrument_name="Acoustic Grand Piano")

    # Return the path to the newly created MIDI file
    return output_file_path

# Initialize MIDI output
print('Initializing MIDI output...')
midiout = rtmidi.MidiOut()
available_ports = midiout.get_ports()

if available_ports:
    midiout.open_port(0)
else:
    midiout.open_virtual_port("My virtual output")

def play_midi_file(mid):
    for msg in mid.play():
        if not msg.is_meta:
            midi_bytes = msg.bytes()
            midiout.send_message(midi_bytes)
            time.sleep(msg.time)
print('MIDI output initialized')
def continuous_playback():
    current_midi_path = generate_midi()  # Generate the first MIDI file
    while True:
        mid = MidiFile(current_midi_path)
        # Play the MIDI file in a separate thread
        Thread(target=play_midi_file, args=(mid,)).start()

        # Generate the next MIDI file while the current one is playing
        next_midi_path = generate_midi()

        # Here, implement logic to wait for the current MIDI file to finish playing
        # This is a simplified placeholder
        time_to_wait = mid.length  # Length of the current MIDI file in seconds
        time.sleep(time_to_wait)

        # Queue the next MIDI file for playback
        current_midi_path = next_midi_path

# Start the continuous playback loop
continuous_playback()
'''
